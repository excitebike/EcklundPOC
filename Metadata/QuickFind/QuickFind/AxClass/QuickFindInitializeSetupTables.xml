<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>QuickFindInitializeSetupTables</Name>
	<SourceCode>
		<Declaration><![CDATA[
//This document is provided “as-is.” Information and views expressed in this document, including URL and other Internet Web site references, may change without notice. You bear the risk of using it.
//THE SAMPLE CODE AND ANY RELATED INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
//This document does not provide you with any legal rights to any intellectual property in any Microsoft product.
internal final class QuickFindInitializeSetupTables
{
    
    /*
    /// <summary>
    /// Class entry point. The system will call this method when a designated menu 
    /// is selected or when execution starts and this class is set as the startup class.
    /// </summary>
    /// <param name = "_args">The specified arguments.</param>
    public static void main(Args _args)
    {
        QuickFindInitializeSetupTables job = new QuickFindInitializeSetupTables();
        
        QuickFindMenuItemTable menuItemTable;
        select firstonly menuItemTable;
        if (menuItemTable)
        {
            error("A record exists in quick find menu item table.  The table must be empty in order to execute this setup job");
        }
        
  

        try
        {
            RecId recId;
            ttsbegin;
            //Account payable
            QuickFindGroupId groupId = job.addGroup("Accounts payable");
            RecId = job.addMenuItem("PurchTable", "PO");
            job.addGroupRelationShip(RecId, GroupId);
            RecId = job.addMenuItem("VendTable", "V");
            job.addGroupRelationShip(RecId, GroupId);

            //Accounts receivable
            groupId = job.addGroup("Accounts receivable");
            RecId = job.addMenuItem("SalesTable", "SO");
            job.addGroupRelationShip(RecId, GroupId);
            RecId = job.addMenuItem("CustTable", "C");
            job.addGroupRelationShip(RecId, GroupId);

            
        

            ttscommit;
        }
        catch
        {
            throw error("Error creating setup data");
        }
    }

    private QuickFindGroupId addGroup(QuickFindGroupId _groupId)
    {
        QuickFindGroup          QuickFindGroup;
        QuickFindGroup.QuickFindGroup = _groupId;
        QuickFindGroup.insert();
        return _groupId;
    }

    private recId addMenuItem(MenuItemNameDisplay _menuItem, QuickFindPrefix _prefix)
    {
        QuickFindMenuItemTable menuItemTable;
        menuItemTable.MenuItemName      = _menuItem;
        menuItemTable.Prefix            = _prefix;
        menuItemTable.initializeFromMenuItemName();
        menuItemTable.insert();
        return menuItemTable.recId;
    }

    private void addGroupRelationship(RecId _MenuItemTableRecId, QuickFindGroupId _groupId)
    {
        QuickFindGroupMenuItemTableRelation relationTable;
        relationTable
        relationTable.QuickFindGroup = _groupId;
        relationTable.insert();
    }
   
    }
    */
}

]]></Declaration>
		<Methods />
	</SourceCode>
</AxClass>